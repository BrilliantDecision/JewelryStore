# Generated by Django 3.0.8 on 2020-07-18 11:24

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllPurchases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(default=0, verbose_name='Количество товара')),
            ],
            options={
                'verbose_name': 'Все покупки',
                'verbose_name_plural': 'Все покупки',
            },
        ),
        migrations.CreateModel(
            name='CategoriesProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=149, verbose_name='Категория')),
                ('url', models.SlugField(max_length=199, unique=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jewelry_store.CategoriesProduct', verbose_name='Родитель')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=149, verbose_name='Имя')),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=16, unique=True, verbose_name='Телефон')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Gems',
            fields=[
                ('id_gem', models.AutoField(primary_key=True, serialize=False, verbose_name='Номер вставки')),
                ('name', models.CharField(max_length=149, unique=True, verbose_name='Камень')),
            ],
            options={
                'verbose_name': 'Драгоценный камень',
                'verbose_name_plural': 'Драгоценные камни',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=149, verbose_name='Имя')),
                ('probe', models.PositiveSmallIntegerField(default=0, verbose_name='Проба')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id_product', models.AutoField(primary_key=True, serialize=False, verbose_name='Артикул')),
                ('title', models.CharField(max_length=149, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('image', models.ImageField(upload_to='products/', verbose_name='Изображение')),
                ('url', models.SlugField(max_length=199, unique=True)),
                ('weight_material', models.FloatField(default=0, help_text='граммы', verbose_name='Вес')),
                ('weight_one_gem', models.FloatField(default=0, help_text='караты', verbose_name='Вес одного камня')),
                ('amount', models.PositiveSmallIntegerField(default=0, verbose_name='Количество')),
                ('category', models.ManyToManyField(related_name='product_categories', to='jewelry_store.CategoriesProduct', verbose_name='Категория')),
                ('gems', models.ManyToManyField(related_name='product_gems', to='jewelry_store.Gems', verbose_name='Драгоценные камни')),
                ('material', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jewelry_store.Material', verbose_name='Материал')),
            ],
            options={
                'verbose_name': 'Изделие',
                'verbose_name_plural': 'Изделия',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id_purchase', models.AutoField(primary_key=True, serialize=False, verbose_name='Номер покупки')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Дата покупки')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jewelry_store.Client', verbose_name='Номер клиента')),
                ('product', models.ManyToManyField(related_name='product_purchases', through='jewelry_store.AllPurchases', to='jewelry_store.Product', verbose_name='товары в покупке')),
            ],
            options={
                'verbose_name': 'Покупка',
                'verbose_name_plural': 'Покупки',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Дата изменения')),
                ('status', models.BooleanField(default=False)),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jewelry_store.Purchase', verbose_name='Номер покупки')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
            },
        ),
        migrations.CreateModel(
            name='ProductPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Дата изменения')),
                ('price', models.FloatField(default=0, help_text='руб.', verbose_name='Цена')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jewelry_store.Product', verbose_name='Номер продукта')),
            ],
            options={
                'verbose_name': 'Цена',
                'verbose_name_plural': 'Цены',
            },
        ),
        migrations.AddField(
            model_name='allpurchases',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jewelry_store.Product'),
        ),
        migrations.AddField(
            model_name='allpurchases',
            name='purchase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jewelry_store.Purchase'),
        ),
        migrations.AddConstraint(
            model_name='status',
            constraint=models.UniqueConstraint(fields=('purchase', 'date'), name='unique status'),
        ),
        migrations.AddConstraint(
            model_name='productprice',
            constraint=models.UniqueConstraint(fields=('product', 'date'), name='unique price'),
        ),
        migrations.AddConstraint(
            model_name='allpurchases',
            constraint=models.UniqueConstraint(fields=('product', 'purchase'), name='unique purchases'),
        ),
    ]
